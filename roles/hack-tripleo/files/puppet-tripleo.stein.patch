diff --git a/manifests/profile/base/database/mysql.pp b/manifests/profile/base/database/mysql.pp
index b3316d4c..269be0c2 100644
--- a/manifests/profile/base/database/mysql.pp
+++ b/manifests/profile/base/database/mysql.pp
@@ -92,6 +92,7 @@ class tripleo::profile::base::database::mysql (
   $mysql_max_connections         = hiera('mysql_max_connections', undef),
   $remove_default_accounts       = true,
   $step                          = Integer(hiera('step')),
+  $is_stretch_mysql              = false,
 ) {

   if $::hostname == downcase($bootstrap_node) {
@@ -171,82 +172,88 @@ class tripleo::profile::base::database::mysql (

   if $step >= 2 and $sync_db {
     Class['::mysql::server'] -> Mysql_database<||>
-    if hiera('aodh_api_enabled', false) {
-      include ::aodh::db::mysql
-    }
-    if hiera('ceilometer_collector_enabled', false) {
-      include ::ceilometer::db::mysql
-    }
-    if hiera('cinder_api_enabled', false) {
-      include ::cinder::db::mysql
-    }
-    if hiera('barbican_api_enabled', false) {
-      include ::barbican::db::mysql
-    }
-    if hiera('congress_enabled', false) {
-      include ::congress::db::mysql
-    }
-    if hiera('designate_api_enabled', false) {
-      include ::designate::db::mysql
-    }
-    if hiera('glance_api_enabled', false) {
-      include ::glance::db::mysql
-    }
-    if hiera('gnocchi_api_enabled', false) {
-      include ::gnocchi::db::mysql
-    }
-    if hiera('heat_engine_enabled', false) {
-      include ::heat::db::mysql
-    }
-    if hiera('ironic_api_enabled', false) {
-      include ::ironic::db::mysql
-    }
-    if hiera('ironic_inspector_enabled', false) {
-      include ::ironic::inspector::db::mysql
-    }
-    if hiera('keystone_enabled', false) {
+
+    if hiera('keystone_enabled', false) and (
+      str2bool(hiera("keystone_stretch_enabled")) == $is_stretch_mysql
+    ) {
       include ::keystone::db::mysql
     }
-    if hiera('manila_api_enabled', false) {
-      include ::manila::db::mysql
-    }
-    if hiera('mistral_api_enabled', false) {
-      include ::mistral::db::mysql
-    }
-    if hiera('neutron_api_enabled', false) {
-      include ::neutron::db::mysql
-    }
-    if hiera('nova_api_enabled', false) {
-      include ::nova::db::mysql
-      include ::nova::db::mysql_api
-    }
-    if hiera('nova_placement_enabled', false) {
-      include ::nova::db::mysql_placement
-    }
-    if hiera('octavia_api_enabled', false) {
-      include ::octavia::db::mysql
-    }
-    if hiera('sahara_api_enabled', false) {
-      include ::sahara::db::mysql
-    }
-    if hiera('tacker_enabled', false) {
-      include ::tacker::db::mysql
-    }
-    if hiera('trove_api_enabled', false) {
-      include ::trove::db::mysql
-    }
-    if hiera('panko_api_enabled', false) {
-      include ::panko::db::mysql
-    }
-    if hiera('ec2_api_enabled', false) {
-      include ::ec2api::db::mysql
-    }
-    if hiera('zaqar_api_enabled', false) and hiera('zaqar::db::mysql::user', '') == 'zaqar' {
-      # NOTE: by default zaqar uses mongodb
-      include ::zaqar::db::mysql
-    }
-    if hiera('veritas_hyperscale_controller_enabled', false) {
-      include ::veritas_hyperscale::db::mysql
+
+    if ! $is_stretch_mysql {
+      if hiera('aodh_api_enabled', false) {
+        include ::aodh::db::mysql
+      }
+      if hiera('ceilometer_collector_enabled', false) {
+        include ::ceilometer::db::mysql
+      }
+      if hiera('cinder_api_enabled', false) {
+        include ::cinder::db::mysql
+      }
+      if hiera('barbican_api_enabled', false) {
+        include ::barbican::db::mysql
+      }
+      if hiera('congress_enabled', false) {
+        include ::congress::db::mysql
+      }
+      if hiera('designate_api_enabled', false) {
+        include ::designate::db::mysql
+      }
+      if hiera('glance_api_enabled', false) {
+        include ::glance::db::mysql
+      }
+      if hiera('gnocchi_api_enabled', false) {
+        include ::gnocchi::db::mysql
+      }
+      if hiera('heat_engine_enabled', false) {
+        include ::heat::db::mysql
+      }
+      if hiera('ironic_api_enabled', false) {
+        include ::ironic::db::mysql
+      }
+      if hiera('ironic_inspector_enabled', false) {
+        include ::ironic::inspector::db::mysql
+      }
+      if hiera('manila_api_enabled', false) {
+        include ::manila::db::mysql
+      }
+      if hiera('mistral_api_enabled', false) {
+        include ::mistral::db::mysql
+      }
+      if hiera('neutron_api_enabled', false) {
+        include ::neutron::db::mysql
+      }
+      if hiera('nova_api_enabled', false) {
+        include ::nova::db::mysql
+        include ::nova::db::mysql_api
+      }
+      if hiera('nova_placement_enabled', false) {
+        include ::nova::db::mysql_placement
+      }
+      if hiera('octavia_api_enabled', false) {
+        include ::octavia::db::mysql
+      }
+      if hiera('sahara_api_enabled', false) {
+        include ::sahara::db::mysql
+      }
+      if hiera('tacker_enabled', false) {
+        include ::tacker::db::mysql
+      }
+      if hiera('trove_api_enabled', false) {
+        include ::trove::db::mysql
+      }
+      if hiera('panko_api_enabled', false) {
+        include ::panko::db::mysql
+      }
+      if hiera('ec2_api_enabled', false) {
+        include ::ec2api::db::mysql
+      }
+      if hiera('zaqar_api_enabled', false) and hiera('zaqar::db::mysql::user', '') == 'zaqar' {
+        # NOTE: by default zaqar uses mongodb
+        include ::zaqar::db::mysql
+      }
+      if hiera('veritas_hyperscale_controller_enabled', false) {
+        include ::veritas_hyperscale::db::mysql
+      }
     }
   }

diff --git a/manifests/profile/base/database/mysql/client.pp b/manifests/profile/base/database/mysql/client.pp
index 5b736ad6..417344c3 100644
--- a/manifests/profile/base/database/mysql/client.pp
+++ b/manifests/profile/base/database/mysql/client.pp
@@ -31,10 +31,20 @@
 #   (Optional) Name of the ini section to be passed to pymysql connection strings
 #   Defaults to 'tripleo'
 #
+# [*mysql_read_stretch_group*]
+#   (Optional) Name of the ini section to be passed to pymysql connection strings
+#   for services connecting to the optional galera "stretch" service
+#   Defaults to 'tripleo-stretch'
+#
 # [*mysql_client_bind_address*]
 #   (Optional) Client IP address of the host that will be written in the mysql_read_default_file
 #   Defaults to undef
 #
+# [*mysql_stretch_bind_address*]
+#   (Optional) Client IP address of the host that will be written for the
+#   optional galera "stretch" service
+#   Defaults to undef
+#
 # [*ssl_ca*]
 #   (Optional) The SSL CA file to use to verify the MySQL server's certificate.
 #   Defaults to '/etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt'
@@ -48,7 +58,9 @@ class tripleo::profile::base::database::mysql::client (
   $enable_ssl                = false,
   $mysql_read_default_file   = '/etc/my.cnf.d/tripleo.cnf',
   $mysql_read_default_group  = 'tripleo',
+  $mysql_read_stretch_group  = 'tripleo-stretch',
   $mysql_client_bind_address = undef,
+  $mysql_stretch_bind_address= undef,
   $ssl_ca                    = '/etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt',
   $step                      = Integer(hiera('step')),
 ) {
@@ -63,19 +75,33 @@ class tripleo::profile::base::database::mysql::client (
       ]
     }

+    if is_ip_addresses($mysql_stretch_bind_address) {
+      $stretch_bind_changes = [
+        "set ${mysql_read_stretch_group}/bind-address '${mysql_stretch_bind_address}'"
+      ]
+    } else {
+      $stretch_bind_changes = [
+        "rm ${mysql_read_stretch_group}/bind-address"
+      ]
+    }
+
     if $enable_ssl {
       $changes_ssl = [
         "set ${mysql_read_default_group}/ssl '1'",
-        "set ${mysql_read_default_group}/ssl-ca '${ssl_ca}'"
+        "set ${mysql_read_default_group}/ssl-ca '${ssl_ca}'",
+        "set ${mysql_read_stretch_group}/ssl '1'",
+        "set ${mysql_read_stretch_group}/ssl-ca '${ssl_ca}'"
       ]
     } else {
       $changes_ssl = [
         "rm ${mysql_read_default_group}/ssl",
-        "rm ${mysql_read_default_group}/ssl-ca"
+        "rm ${mysql_read_default_group}/ssl-ca",
+        "rm ${mysql_read_stretch_group}/ssl",
+        "rm ${mysql_read_stretch_group}/ssl-ca"
       ]
     }

-    $conf_changes = union($client_bind_changes, $changes_ssl)
+    $conf_changes = union($client_bind_changes, $stretch_bind_changes, $changes_ssl)

     # Create /etc/my.cnf.d/tripleo.cnf
     # If the folder /etc/my.cnf.d does not exist (e.g. if mariadb is not
