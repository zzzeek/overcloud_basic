commit af00c0355665fe8fb6100640fd858521a025b07d
Author: Mike Bayer <mike_mp@zzzcomputing.com>
Date:   Wed Jul 17 15:30:00 2019 -0400

    Add SQLAlchemy-collectd support
    
    WIP
    
    Change-Id: I90c8e6947adc8ba60c37b841165a9108f8046e9d

diff --git a/deployment/metrics/collectd-container-puppet.yaml b/deployment/metrics/collectd-container-puppet.yaml
index 4c1794287..24e904a3f 100644
--- a/deployment/metrics/collectd-container-puppet.yaml
+++ b/deployment/metrics/collectd-container-puppet.yaml
@@ -229,6 +229,20 @@ parameters:
     type: number
     description: Minimum number of values Gnocchi should batch.
     default: 10
+  EnableSQLAlchemyCollectd:
+    type: boolean
+    description: set to True to enable the SQLAlchemy-collectd server plugin.
+    default: false
+  CollectdSQLAlchemyLogLevel:
+    type: string
+    description: set to "debug" to enable message logging.
+    default: 'info'
+  CollectdSQLAlchemyBindHost:
+    type: string
+    description: >
+      hostname for SQLAlchemy-collectd plugin to bind on.  defaults
+      to 0.0.0.0.
+    default: '0.0.0.0'
   CollectdAmqpHost:
     type: string
     description: Hostname or IP address of the AMQP 1.0 intermediary.
@@ -298,6 +312,8 @@ conditions:
     and:
       - equals: [{get_param: CollectdGnocchiServer}, nil]
       - equals: [{get_param: CollectdGnocchiKeystoneEndpoint}, nil]
+  enable_sqlalchemy_collectd: {equals : [{get_param: EnableSQLAlchemyCollectd}, true]}
+
 
 resources:
 
@@ -382,6 +398,16 @@ outputs:
               tripleo::profile::base::metrics::collectd::collectd_securitylevel:
                 get_param: CollectdSecurityLevel
             - {}
+          - if:
+            - enable_sqlalchemy_collectd
+            - map_merge:
+              - tripleo::profile::base::metrics::collectd::sqlalchemy_collectd_enabled:
+                  true
+              - tripleo::profile::base::metrics::collectd::sqlalchemy_collectd_bind_host:
+                  get_param: CollectdSQLAlchemyBindHost
+              - tripleo::profile::base::metrics::collectd::sqlalchemy_collectd_loglevel:
+                  get_param: CollectdSQLAlchemyLogLevel
+            - {}
           - if: # Collectd connected directly to Gnocchi DB
             - gnocchi_connection
             - map_merge:
diff --git a/deployment/neutron/neutron-api-container-puppet.yaml b/deployment/neutron/neutron-api-container-puppet.yaml
index 10db40de9..78211673e 100644
--- a/deployment/neutron/neutron-api-container-puppet.yaml
+++ b/deployment/neutron/neutron-api-container-puppet.yaml
@@ -98,6 +98,11 @@ parameters:
   EnableInternalTLS:
     type: boolean
     default: false
+  EnableSQLAlchemyCollectd:
+    type: boolean
+    description: >
+        Set to True to send collectd metrics to the local collectd instance.
+    default: false
   NeutronApiPolicies:
     description: |
       A hash of policies to configure for Neutron API.
@@ -142,6 +147,7 @@ conditions:
   neutron_ovs_int_br_unset: {equals : [{get_param: NeutronOvsIntegrationBridge}, '']}
   internal_tls_enabled: {equals: [{get_param: EnableInternalTLS}, true]}
   neutron_dvr_unset: {equals : [{get_param: NeutronEnableDVR}, '']}
+  enable_sqlalchemy_collectd: {equals : [{get_param: EnableSQLAlchemyCollectd}, true]}
 
 resources:
 
@@ -196,8 +202,18 @@ outputs:
                 host: {get_param: [EndpointMap, MysqlInternal, host]}
                 path: /ovs_neutron
                 query:
-                  read_default_file: /etc/my.cnf.d/tripleo.cnf
-                  read_default_group: tripleo
+                  if:
+                    - enable_sqlalchemy_collectd
+                    -
+                        read_default_file: /etc/my.cnf.d/tripleo.cnf
+                        read_default_group: tripleo
+                        plugin: collectd
+                        collectd_program_name: ovs_neutron
+                        collectd_host: localhost
+                    -
+                        read_default_file: /etc/my.cnf.d/tripleo.cnf
+                        read_default_group: tripleo
+
             neutron::policy::policies: {get_param: NeutronApiPolicies}
             neutron::keystone::authtoken::www_authenticate_uri: {get_param: [EndpointMap, KeystoneInternal, uri_no_suffix] }
             neutron::keystone::authtoken::auth_uri: {get_param: [EndpointMap, KeystoneInternal, uri_no_suffix] }
diff --git a/deployment/nova/nova-base-puppet.yaml b/deployment/nova/nova-base-puppet.yaml
index f23f72a77..40fa7c4f5 100644
--- a/deployment/nova/nova-base-puppet.yaml
+++ b/deployment/nova/nova-base-puppet.yaml
@@ -64,6 +64,11 @@ parameters:
     type: string
     constraints:
       - allowed_values: [ '', 'true', 'True', 'TRUE', 'false', 'False', 'FALSE']
+  EnableSQLAlchemyCollectd:
+    type: boolean
+    description: >
+        Set to True to send collectd metrics to the local collectd instance.
+    default: false
   EnableConfigPurge:
     type: boolean
     default: false
@@ -238,6 +243,7 @@ conditions:
 
   compute_upgrade_level_empty: {equals : [{get_param: UpgradeLevelNovaCompute}, '']}
   service_debug_unset: {equals : [{get_param: NovaDebug}, '']}
+  enable_sqlalchemy_collectd: {equals : [{get_param: EnableSQLAlchemyCollectd}, true]}
 
 resources:
 
@@ -280,8 +286,18 @@ outputs:
               host: {get_param: [EndpointMap, MysqlCellInternal, host]}
               path: /nova
               query:
-                read_default_file: /etc/my.cnf.d/tripleo.cnf
-                read_default_group: tripleo
+                if:
+                  - enable_sqlalchemy_collectd
+                  -
+                      read_default_file: /etc/my.cnf.d/tripleo.cnf
+                      read_default_group: tripleo
+                      plugin: collectd
+                      collectd_program_name: nova
+                      collectd_host: localhost
+                  -
+                      read_default_file: /etc/my.cnf.d/tripleo.cnf
+                      read_default_group: tripleo
+
           nova::cell0_database_connection:
             make_url:
               scheme: {get_param: [EndpointMap, MysqlInternal, protocol]}
@@ -290,8 +306,18 @@ outputs:
               host: {get_param: [EndpointMap, MysqlInternal, host]}
               path: /nova_cell0
               query:
-                read_default_file: /etc/my.cnf.d/tripleo.cnf
-                read_default_group: tripleo
+                if:
+                  - enable_sqlalchemy_collectd
+                  -
+                      read_default_file: /etc/my.cnf.d/tripleo.cnf
+                      read_default_group: tripleo
+                      plugin: collectd
+                      collectd_program_name: nova_cell0
+                      collectd_host: localhost
+                  -
+                      read_default_file: /etc/my.cnf.d/tripleo.cnf
+                      read_default_group: tripleo
+
           nova::api_database_connection:
             make_url:
               scheme: {get_param: [EndpointMap, MysqlInternal, protocol]}
@@ -300,8 +326,18 @@ outputs:
               host: {get_param: [EndpointMap, MysqlInternal, host]}
               path: /nova_api
               query:
-                read_default_file: /etc/my.cnf.d/tripleo.cnf
-                read_default_group: tripleo
+                if:
+                  - enable_sqlalchemy_collectd
+                  -
+                      read_default_file: /etc/my.cnf.d/tripleo.cnf
+                      read_default_group: tripleo
+                      plugin: collectd
+                      collectd_program_name: nova_api
+                      collectd_host: localhost
+                  -
+                      read_default_file: /etc/my.cnf.d/tripleo.cnf
+                      read_default_group: tripleo
+
           nova::placement_database_connection:
             make_url:
               scheme: {get_param: [EndpointMap, MysqlInternal, protocol]}
@@ -310,8 +346,18 @@ outputs:
               host: {get_param: [EndpointMap, MysqlInternal, host]}
               path: /nova_api
               query:
-                read_default_file: /etc/my.cnf.d/tripleo.cnf
-                read_default_group: tripleo
+                if:
+                  - enable_sqlalchemy_collectd
+                  -
+                      read_default_file: /etc/my.cnf.d/tripleo.cnf
+                      read_default_group: tripleo
+                      plugin: collectd
+                      collectd_program_name: nova_placement
+                      collectd_host: localhost
+                  -
+                      read_default_file: /etc/my.cnf.d/tripleo.cnf
+                      read_default_group: tripleo
+
           nova::logging::debug:
             if:
             - service_debug_unset
