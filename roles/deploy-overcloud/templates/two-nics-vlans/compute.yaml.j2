heat_template_version: {{ heat_template_version }}
description: >
  Software Config to drive os-net-config to configure multiple interfaces for the Compute role.
parameters:
  ControlPlaneIp:
    default: ''
    description: IP address/subnet on the ctlplane network
    type: string
  ControlPlaneSubnetCidr:
    default: ''
    description: >
      The subnet CIDR of the control plane network. (The parameter is
      automatically resolved from the ctlplane subnet's cidr attribute.)
    type: string
  ControlPlaneDefaultRoute:
    default: ''
    description: The default route of the control plane network. (The parameter
      is automatically resolved from the ctlplane subnet's gateway_ip attribute.)
    type: string
{% if release_numeric_version >= 14 %}
  ControlPlaneStaticRoutes:
    default: []
    description: >
      Routes for the ctlplane network traffic.
      JSON route e.g. [{'destination':'10.0.0.0/16', 'nexthop':'10.0.0.1'}]
      Unless the default is changed, the parameter is automatically resolved
      from the subnet host_routes attribute.
    type: json
  ControlPlaneMtu:
    default: 1500
    description: The maximum transmission unit (MTU) size(in bytes) that is
      guaranteed to pass through the data path of the segments in the network.
      (The parameter is automatically resolved from the ctlplane network's mtu attribute.)
    type: number
{% endif %}

  StorageIpSubnet:
    default: ''
    description: IP address/subnet on the storage network
    type: string
  StorageNetworkVlanID:
    default: 30
    description: Vlan ID for the storage network traffic.
    type: number
{% if release_numeric_version >= 14 %}
  StorageMtu:
    default: 1500
    description: The maximum transmission unit (MTU) size(in bytes) that is
      guaranteed to pass through the data path of the segments in the
      Storage network.
    type: number
  StorageInterfaceRoutes:
    default: []
    description: >
      Routes for the storage network traffic.
      JSON route e.g. [{'destination':'10.0.0.0/16', 'nexthop':'10.0.0.1'}]
      Unless the default is changed, the parameter is automatically resolved
      from the subnet host_routes attribute.
    type: json
{% endif %}
  InternalApiIpSubnet:
    default: ''
    description: IP address/subnet on the internal_api network
    type: string
  InternalApiNetworkVlanID:
    default: 20
    description: Vlan ID for the internal_api network traffic.
    type: number
  InternalApiMtu:
    default: 1500
    description: The maximum transmission unit (MTU) size(in bytes) that is
      guaranteed to pass through the data path of the segments in the
      InternalApi network.
    type: number
  InternalApiInterfaceRoutes:
    default: []
    description: >
      Routes for the internal_api network traffic.
      JSON route e.g. [{'destination':'10.0.0.0/16', 'nexthop':'10.0.0.1'}]
      Unless the default is changed, the parameter is automatically resolved
      from the subnet host_routes attribute.
    type: json
  TenantIpSubnet:
    default: ''
    description: IP address/subnet on the tenant network
    type: string
  TenantNetworkVlanID:
    default: 50
    description: Vlan ID for the tenant network traffic.
    type: number
  TenantMtu:
    default: 1500
    description: The maximum transmission unit (MTU) size(in bytes) that is
      guaranteed to pass through the data path of the segments in the
      Tenant network.
    type: number
  TenantInterfaceRoutes:
    default: []
    description: >
      Routes for the tenant network traffic.
      JSON route e.g. [{'destination':'10.0.0.0/16', 'nexthop':'10.0.0.1'}]
      Unless the default is changed, the parameter is automatically resolved
      from the subnet host_routes attribute.
    type: json
  DnsServers: # Override this via parameter_defaults
    default: []
    description: >
      DNS servers to use for the Overcloud (2 max for some implementations).
      If not set the nameservers configured in the ctlplane subnet's
      dns_nameservers attribute will be used.
    type: comma_delimited_list
  EC2MetadataIp:
    default: ''
    description: The IP address of the EC2 metadata server. (The parameter
      is automatically resolved from the ctlplane subnet's host_routes attribute.)
    type: string
resources:
  OsNetConfigImpl:
    type: OS::Heat::SoftwareConfig
    properties:

      group: script
      config:
          str_replace:
              template:
                  get_file: /usr/share/openstack-tripleo-heat-templates/network/scripts/run-os-net-config.sh
              params:
                   $network_config:
                       network_config:
                        -
                          type: ovs_bridge
                          name: bridge_name
                          use_dhcp: false
                          dns_servers:
                              get_param: DnsServers
                          addresses:
                            -
                              ip_netmask:
                                list_join:
                                  - '/'
                                  - - get_param: ControlPlaneIp
                                    - get_param: ControlPlaneSubnetCidr
                          routes:
                            -
                              ip_netmask: 0.0.0.0/0
                              next_hop:
                                  get_param: ControlPlaneDefaultRoute

                              # set this interface as default route
                              default: true
                            -
                              ip_netmask: 169.254.169.254/32
                              next_hop:
                                  get_param: EC2MetadataIp
                          members:
                            -
                              type: interface
                              name: nic1
                              # force the MAC address of the bridge to this interface
                              primary: true
                            -
                              type: vlan
                              vlan_id:
                                  get_param: InternalApiNetworkVlanID
                              addresses:
                              -
                                ip_netmask:
                                    get_param: InternalApiIpSubnet
                            -
                              type: vlan
                              vlan_id:
                                  get_param: StorageNetworkVlanID
                              addresses:
                              -
                                ip_netmask:
                                    get_param: StorageIpSubnet
                            -
                              type: vlan
                              vlan_id:
                                  get_param: TenantNetworkVlanID
                              addresses:
                              -
                                ip_netmask:
                                    get_param: TenantIpSubnet
                        -
                          type: interface
                          name: nic2
                          use_dhcp: true
                          defroute: false

outputs:
  OS::stack_id:
    description: The OsNetConfigImpl resource.
    value:
        get_resource: OsNetConfigImpl
