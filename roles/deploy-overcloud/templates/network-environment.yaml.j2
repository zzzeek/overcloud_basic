resource_registry:
  OS::TripleO::Compute::Net::SoftwareConfig: two-nics-vlans/compute.yaml
  OS::TripleO::Controller::Net::SoftwareConfig: two-nics-vlans/controller.yaml

parameter_defaults:
  # mostly from https://docs.openstack.org/tripleo-docs/latest/install/advanced_deployment/network_isolation.html
  # as well as https://github.com/openstack/tripleo-quickstart-extras/blob/master/roles/overcloud-prep-config/defaults/main.yml#L15

  # TODO
  # StretchMySQLRemoteNodeNames:
  #   - stack1-overcloud-controller-0
  #   - stack1-overcloud-controller-1
  #   - stack1-overcloud-controller-2
  #
  #  ansible:
  #  for node in gathered_remote_node_names
  #   -  node
  #  endfor

  # StretchMySQLRemoteNodeFQDNSNames:
  #   - 10.1.10.22
  #   - 10.1.10.23
  #   - 10.1.10.24
  #
  #  ansible:
  #  for dns in gathered_remote_node_fqdns_names
  #   -  node
  #  endfor

  ExternalNetCidr: '{{ external_network_cidr }}'
  ExternalAllocationPools:
    -   start: {{ external_network_cidr|nthhost(10) }}
        end: {{ external_network_cidr|nthhost(250) }}

  InternalApiNetCidr: '{{ internalapi_network_cidr }}'
  StorageNetCidr: '{{ storage_network_cidr }}'
  StorageMgmtNetCidr: '{{ storagemgmt_network_cidr }}'
  TenantNetCidr: '{{ tenant_network_cidr }}'

  InternalApiAllocationPools:
    -   start: {{ internalapi_network_cidr|nthhost(10) }}
        end: {{ internalapi_network_cidr|nthhost(200) }}

  StorageAllocationPools:
    -   start: {{ storage_network_cidr|nthhost(10) }}
        end: {{ storage_network_cidr|nthhost(200) }}

  StorageMgmtAllocationPools:
    -   start: {{ storagemgmt_network_cidr|nthhost(10) }}
        end: {{ storagemgmt_network_cidr|nthhost(200) }}

  TenantAllocationPools:
    -   start: {{ tenant_network_cidr|nthhost(10) }}
        end: {{ tenant_network_cidr|nthhost(200) }}

  NeutronExternalNetworkBridge: ""
  ExternalInterfaceDefaultRoute: {{ external_network_cidr|nthhost(1) }}
  ControlPlaneSubnetCidr: '{{ undercloud_network_cidr|ipaddr('prefix') }}'
  ControlPlaneDefaultRoute: {{ undercloud_management_ip }}
  EC2MetadataIp: {{ undercloud_management_ip }}
  DnsServers:
  {% for dns in overcloud_dns_servers %}
    - {{ dns }}
  {% endfor %}


  StretchSshIdPub: "{{ id_rsa_pub }}"
  StretchSshId: "{{ id_rsa }}"


  # The overclouds are going to share the same Keystone database.  So lets
  # set up for two different regions, e.g. region_stack1 and region_stack2.
  # at the moment it seems like the OSP12 overclouds default to not using
  # keystone endpoints and instead have service IPs hardcoded, but using
  # endpoint discovery w/ regions is cooler.
  # Unfortunately, this option appears to work only sporadically as
  # far as being correctly populated into .conf files, some
  # OSP versions seem to honor it and others ignore it, so we have to
  # populate .conf files with it after the fact regardless
  KeystoneRegion: "region_{{ rh_stack_name }}"

  # Keystone's admin password as well as the database password!
  AdminToken: "keystone_admin_token"

  # since we are sharing the same keystone, the services on both
  # overclouds need to use the same passwords.  clearly this would have
  # to be integrated into the "make a bunch of passwords" thing :)
  ManilaPassword: "Manila_password"
  NeutronPassword: "Neutron_password"
  GlancePassword: "Glance_password"
  HeatPassword: "Heat_password"
  AdminPassword: "Admin_password"
  IronicPassword: "Ironic_password"
  HeatStackDomainAdminPassword: "HeatStackDomainAdmin_password"
  ZaqarPassword: "Zaqar_password"
  GnocchiPassword: "Gnocchi_password"
  CeilometerPassword: "Ceilometer_password"
  CinderPassword: "Cinder_password"
  NovaPassword: "Nova_password"
  MistralPassword: "Mistral_password"
  AodhPassword: "Aodh_password"
  SwiftPassword: "Swift_password"
  BarbicanPassword: "Barbican_password"
  SaharaPassword: "Sahara_password"
