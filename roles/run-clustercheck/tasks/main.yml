
- name: copy kolla config
  shell: cp -R /var/lib/config-data/puppet-generated/clustercheck /var/lib/config-data/puppet-generated/clustercheck_stretch
  become: true

- name: setup clustercheck config
  template:
      src: clustercheck.j2
      dest: /var/lib/config-data/puppet-generated/clustercheck_stretch/etc/sysconfig/clustercheck
      owner: "{{ mysql_uid }}"
      group: "{{ mysql_gid }}"
  become: true

- name: create clustercheck user on stretch_galera
  shell: mysql {{ stretch_galera_local_login }} -e "GRANT PROCESS ON *.* TO   'clustercheck'@'localhost' IDENTIFIED BY 'ccheck'"
  become: true
  run_once: true

- name: edit xinetd
  lineinfile:
      path: /var/lib/config-data/puppet-generated/clustercheck_stretch/etc/xinetd.d/galera-monitor
      regexp: bind.*=
      line: "      bind              = {{ transport_ip_number }}"

  become: true

- name: set container volumes fact
  set_fact:
      clustercheck_volumes:
        - /etc/hosts:/etc/hosts:ro
        - /var/lib/mysql-stretch:/var/lib/mysql:rw
        - /etc/localtime:/etc/localtime:ro
        - /dev/log:/dev/log:rw
        - /etc/puppet:/etc/puppet:ro
        - /etc/pacemaker/authkey:/etc/pacemaker/authkey
        - /var/lib/kolla/config_files/clustercheck.json:/var/lib/kolla/config_files/config.json:ro
        - /var/lib/config-data/puppet-generated/clustercheck_stretch/:/var/lib/kolla/config_files/src:ro

- name: run container
  docker_container:
    name: stretch_clustercheck
    recreate: true
    image: "{{ clustercheck_image }}"
    command: kolla_start
    volumes: "{{ clustercheck_volumes }}"
    env:
      KOLLA_CONFIG_STRATEGY: "COPY_ALWAYS"
    network_mode: host
  become: true

