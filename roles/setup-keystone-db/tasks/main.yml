- name: from stack2 overcloud, copy and merge into stack1 overcloud DB
  when: "'stack2_controller' in group_names"
  run_once: true
  block:

  # note that by omitting --databases, we get a dump that's local to "keystone" and doesn't include
  # CREATE DATABASE or USE
  - name: get keystone data from overcloud 2
    shell: mysqldump {{ stretch_galera_local_login }}  --single-transaction keystone >  keystone_{{ stack_name }}_database.sql

  - name: create placeholder keystone database in overcloud 1
    shell: mysql {{ stretch_galera_master_login }}  -e "CREATE DATABASE IF NOT EXISTS keystone_{{ stack_name }} CHARSET utf8mb4"

  - name: copy keystone db to placeholder db
    shell: mysql {{ stretch_galera_master_login }} keystone_{{ stack_name }} < keystone_{{ stack_name }}_database.sql

  - name: get keystone grants from overcloud 2
    shell: mysql {{ stretch_galera_local_login }} -N -e "show grants for keystone" | sed 's/$/;/' >  keystone_{{ stack_name }}_grants.sql

  - name: copy keystone setup grants to overcloud1 keystone db
    shell: mysql {{ stretch_galera_master_login }} keystone < keystone_{{ stack_name }}_grants.sql

  - name: rebuild keystone regions and endpoints
    shell: |
      mysql {{ stretch_galera_master_login }} keystone << "EOF"

      INSERT INTO keystone.region (id, description, parent_region_id, extra)
      SELECT id, description, parent_region_id, extra FROM keystone_stack2.region;

      INSERT INTO keystone.endpoint (id, interface, service_id, url, extra, enabled, region_id)
      SELECT replace(md5(rand()), '-', ''), k2e.interface, k_s.id, k2e.url, k2e.extra, k2e.enabled, k2e.region_id
      FROM keystone_stack2.endpoint AS k2e
      JOIN keystone_stack2.service AS k2s ON k2e.service_id=k2s.id
      JOIN keystone.service as k_s ON k_s.type=k2s.type AND k_s.extra=k2s.extra;



