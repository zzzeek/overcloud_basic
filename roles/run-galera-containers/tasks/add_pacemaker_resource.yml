- name: determine if galera-bundle exists
  shell: /usr/sbin/pcs resource show stretch-galera-bundle
  ignore_errors: yes
  register: galera_bundle_exists
  become: true

- name: create galera-bundle
  when: galera_bundle_exists.rc != 0

  block:
  - name: backup cib for galera-bundle
    shell: /usr/sbin/pcs cluster cib > /var/lib/pacemaker/cib/stretch-galera-create-bundle.orig
    become: true

  - name: copy file
    shell: cp /var/lib/pacemaker/cib/stretch-galera-create-bundle.orig /var/lib/pacemaker/cib/stretch-galera-create-bundle
    become: true

  - name: render volume entries pcs
    set_fact:
      volume_string: >-
        storage-map
        id={{ item['id'] }}
        source-dir={{ item['source'] }}
        target-dir={{ item['target'] }}
        options={{ item['flags'] }}
    with_items: "{{ galera_volumes }}"
    register: volume_string_result

  - name: set pcs volumes fact
    set_fact:
        galera_pcs_volumes: >-
          {{ volume_string_result.results |
             map(attribute='ansible_facts.volume_string') | join(' ')
          }}

  - name: create cib for galera-bundle
    shell: >
      /usr/sbin/pcs
      -f /var/lib/pacemaker/cib/stretch-galera-create-bundle
      resource bundle create stretch-galera-bundle
      container docker image={{ stretch_galera_imagename }}:latest
      replicas=2 masters=2
      options="--user=root
      --log-driver=journald
      -e KOLLA_CONFIG_STRATEGY=COPY_ALWAYS"
      run-command="/bin/bash /usr/local/bin/kolla_start"
      network=host
      {{ galera_pcs_volumes }}
      network control-port={{ pacemaker_network_control_port }} --disabled
    become: true

  - name: add rule to only run on stretch-galera-role node
    shell: >
      /usr/sbin/pcs
      -f /var/lib/pacemaker/cib/stretch-galera-create-bundle
      constraint location stretch-galera-bundle rule stretch-galera-role eq true
    become: true

  - name: exec cib for galera-bundle
    shell: >
      /usr/sbin/pcs cluster cib-push /var/lib/pacemaker/cib/stretch-galera-create-bundle
      diff-against=/var/lib/pacemaker/cib/stretch-galera-create-bundle.orig
    become: true

- name: determine if stretch-galera exists
  shell: /usr/sbin/pcs resource show stretch-galera
  ignore_errors: yes
  register: galera_exists
  become: true

- name: create stretch-galera
  when: galera_exists.rc != 0
  block:
  - name: backup cib for galera
    shell: /usr/sbin/pcs cluster cib > /var/lib/pacemaker/cib/stretch-galera-create-resource.orig
    become: true

  - name: copy file
    shell: cp /var/lib/pacemaker/cib/stretch-galera-create-resource.orig /var/lib/pacemaker/cib/stretch-galera-create-resource
    become: true

    # gcomm_address, cluster_host_map, remote_node_map come from kolla config step
  - name: create cib for galera
    shell: >
      /usr/sbin/pcs
      -f /var/lib/pacemaker/cib/stretch-galera-create-resource
      resource create stretch-galera ocf:heartbeat:galera
      log='/var/log/mysql/mysqld.log'
      additional_parameters='--open-files-limit=16384'
      enable_creation=true
      wsrep_cluster_address='{{ gcomm_address }}'
      cluster_host_map='{{ cluster_host_map }}'
      remote_node_map='{{ remote_node_map }}'
      meta master-max=2 ordered=true
      container-attribute-target=host op promote timeout=300s
      on-fail=block
      bundle stretch-galera-bundle
    become: true

  - name: exec cib for galera
    shell: >
      /usr/sbin/pcs cluster cib-push /var/lib/pacemaker/cib/stretch-galera-create-resource
      diff-against=/var/lib/pacemaker/cib/stretch-galera-create-resource.orig
    become: true

- name: set container name fact
  set_fact:
    galera_container_name: stretch-galera-bundle-docker-0

- name: resource enable
  shell: /usr/sbin/pcs resource enable stretch-galera-bundle
  become: true
