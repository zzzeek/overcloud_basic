- name: pull config variables into environment
  include_vars: "{{ playbook_dir }}/../config.yml"
  tags: always

- name: get galera-node specific information
  when: "'galera_nodes' in group_names"
  block:

    - name: Get transport IP
      shell: /sbin/ip -4 addr show {{ stretch_network_vlan_name }} | grep "inet\b" | awk '{print $2}' | cut -d/ -f1
      register: transport_ip_number_cmd

    - name: set transport IP fact
      set_fact:
         transport_ip_number: '{{ transport_ip_number_cmd.stdout_lines[0] }}'

    - name: get docker container name
      shell: "docker ps | grep galera-bundle-docker | awk -F' ' '{print $NF}'"
      register: docker_ps_cmd
      become: true

    - name: get docker image name for galera from already running DB
      shell: docker inspect {{ docker_ps_cmd.stdout }}
      register: docker_inspect_cmd
      become: true

    - name: get galera image name
      set_fact: galera_image="{{ (docker_inspect_cmd.stdout | from_json)[0]['Config']['Image'] }}"

    - name: get docker image name for clustercheck already running
      shell: docker inspect clustercheck
      register: docker_inspect_cmd
      become: true

    - name: get clustercheck image name
      set_fact: clustercheck_image="{{ (docker_inspect_cmd.stdout | from_json)[0]['Config']['Image'] }}"

    - name: get mysql uid / gid
      docker_container:
        name: stretch_galera_cmd
        cleanup: true
        image: "{{ galera_image }}"
        command:  'bash -c  ''echo {\"uid\": `id mysql -u`, \"gid\": `id mysql -g`}'''
        detach: false
      register: mysql_id_cmd
      become: true

    - name: set mysql uid / gid facts
      set_fact:
        mysql_uid: "{{ (mysql_id_cmd.ansible_facts.docker_container.Output | from_json)['uid'] }}"
        mysql_gid: "{{ (mysql_id_cmd.ansible_facts.docker_container.Output | from_json)['gid'] }}"

- name: get pacemaker nodes
  block:
  - name: get pacemaker node name
    shell: /usr/sbin/crm_node -n
    register: get_nodename_cmd

  - name: set pacemaker node name fact
    set_fact:
      pacemaker_node_name: '{{ get_nodename_cmd.stdout }}'
  when: "'stack1_controller' in group_names or 'stack2_controller' in group_names"

- name: set facts for configuring / accessing Galera / MySQL
  set_fact:
      galera_listen_port: "{{ galera_listen_port }}"
      galera_root_password: "{{ galera_root_password }}"

- name: set stack1-specific facts
  set_fact:
    stack_name: "stack1"
    galera_vip: "{{ stack1_galera_vip }}"
  when: "'stack1' in group_names"

- name: set stack2-specific facts
  set_fact:
    stack_name: 'stack2'
    galera_vip: "{{ stack2_galera_vip }}"
  when: "'stack2' in group_names"

- name: set MySQL vip login flags fact
  set_fact:
      galera_local_login: "-u root --password='{{ galera_root_password }}' -P {{ galera_listen_port }} -h {{ transport_ip_number }}"
      galera_vip_login: "-u root --password='{{ galera_root_password }}' -h {{ galera_vip }}"
  when: "'galera_nodes' in group_names"
